{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/store.service.ts","./src/app/shared/Order.ts","./src/app/shared/OrderItem.ts","./src/app/views/cardListView.component.html","./src/app/views/cardListView.component.ts","./src/app/views/cartView.component.html","./src/app/views/cartView.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Web Card Shop';\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-9\">\n      <h3>{{title}}</h3>\n      <cards-list></cards-list>\n    </div> \n    <div class=\"col-3\">\n      <cart></cart>\n    </div>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { Store } from './services/store.service';\nimport  CardListView  from './views/cardListView.component';\nimport { CartView } from './views/cartView.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardListView,\n    CartView\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [\n    Store\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Card } from \"../shared/Card\";\r\nimport { Order} from \"../shared/Order\";\r\nimport { OrderItem } from \"../shared/OrderItem\";\r\n\r\n@Injectable()\r\nexport class Store {\r\n\r\nconstructor(private http: HttpClient){\r\n    \r\n}\r\n\r\n    public cards: Card[] = [];\r\n    public order: Order = new Order();\r\n    \r\n    loadProducts(): Observable<void>{\r\n        return this.http.get<[]>(\"/api/card\")\r\n        .pipe(map(data => {\r\n            this.cards = data\r\n            return;\r\n        }))\r\n    }\r\n\r\n    addToOrder(card: Card) {\r\n\r\n        let  item: OrderItem|undefined;\r\n\r\n        item = this.order.items.find(order => order.playerCardId === card.id);\r\n        if (item){\r\n            item.quantity++;\r\n        }\r\n        else{\r\n            item = new OrderItem();\r\n            item.playerCardId = card.id\r\n            item.playerCardCategory = card.category;\r\n            item.playerCardNationality = card.nationality;\r\n            item.playerCardPlayerName = card.playerName;\r\n            item.playerCardCardId = card.cardId\r\n            item.unitPrice = card.price;\r\n            item.quantity = 1;\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n    }\r\n\r\n","import  {OrderItem}  from \"./OrderItem\";\r\n\r\nexport class Order {\r\n    orderId!: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber!: number;\r\n    items: OrderItem[] = [];\r\n\r\n\r\n    \r\n    public get subtotal() : number {\r\n\r\n        const result = this.items.reduce((acc, value) => {\r\n            return acc + (value.unitPrice * value.quantity)\r\n        }, 0) // start at 0\r\n        return result;\r\n    }\r\n        \r\n    \r\n    \r\n}","export class OrderItem {\r\n    id!: number;\r\n    quantity!: number;\r\n    unitPrice!: number;\r\n    playerCardId!: number;\r\n    playerCardCategory!: string;\r\n    playerCardNationality!: string;\r\n    playerCardPlayerName!: string;\r\n    playerCardCardId!: string;\r\n}","<div class=\"row\">\r\n    <div *ngFor=\"let item of store.cards\" class=\"col-md-4 mb-2\">\r\n        <div class=\"border bg-light rounded p-1 playercard\" >\r\n            <img src=\"/img/{{item.cardId}}.png\" class=\"img-fluid playercard__image\" alt=\"{{item.playerName}}\"/>\r\n            <h5>{{item.playerName}} - {{item.category}}</h5> \r\n            <ul class=\"playercard__properties\">\r\n                <li>Price: {{item.price | number : '1.2-2' | currency: 'GBP'}}m</li>\r\n                <li>Nationality: {{item.nationality}}</li>\r\n                <li>Height: {{item.height | number : '1.2-2'}}m</li>\r\n                <li>Status: {{item.actualClub}}</li>\r\n                <li>Position: {{item.position}}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"bnt btn-success\" (click)=\"store.addToOrder(item)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: 'cards-list',\r\n    templateUrl: 'cardListView.component.html',\r\n    styleUrls: ['./cardListView.component.scss']\r\n})\r\n\r\n\r\nexport default class CardListView implements OnInit {\r\n\r\n    constructor(public store: Store) {\r\n        \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n        .subscribe(() => { //do something}\r\n        // kicks off the operation \r\n        });\r\n    }\r\n}\r\n","<h3>Cart</h3>\r\n<div>Count: {{ store.order.items.length}}</div>\r\n<table class=\"table table-condensed table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th></th>\r\n            <th>Product</th>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Total</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let item of store.order.items\">\r\n            <td>\r\n            <img src=\"/img/{{item.playerCardCardId}}.png\"  alt=\"{{item.playerCardPlayerName}}\" class=\"img-fluid cardthumb\" />\r\n            </td>\r\n            <td>{{item.playerCardPlayerName}}</td>\r\n            <td>{{item.quantity}}</td>\r\n            <td>{{item.unitPrice | currency: \"GBP\"}}m</td>\r\n            <td>{{item.unitPrice * item.quantity | currency: \"GBP\"}}m</td>\r\n        </tr>\r\n    </tbody>\r\n    <tfoot>\r\n        <tr>\r\n            <td colspan=\"5\"><strong>Subtotal: {{store.order.subtotal | currency: \"GBP\"}}m</strong></td>\r\n        </tr>\r\n    </tfoot>\r\n</table>\r\n<hr />\r\n","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: 'cart',\r\n    templateUrl: 'cartView.component.html',\r\n    styleUrls: ['./cartView.component.scss']\r\n})\r\nexport class CartView {\r\n    constructor(public store: Store){\r\n\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}